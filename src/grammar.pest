// Grammar for the scripting language

WHITESPACE = _{ " " | "\t" }

program = { SOI ~ "\n"* ~ (item ~ "\n"+)* ~ item? ~ "\n"* ~ EOI }

item = {
    comment
    | function_def
    | function_call
    | assignment
    | command
}

comment = { "#" ~ (!"\n" ~ ANY)* }

// Function definition: name() command
function_def = { identifier ~ "(" ~ ")" ~ command }

// Function call: name() or name arg1 arg2 ...
function_call = { identifier ~ "(" ~ ")" ~ (WHITESPACE+ ~ argument)* }

// Assignment: var=value
assignment = { identifier ~ "=" ~ value }

// Identifier can contain letters, numbers, underscores, and colons
identifier = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_" | ":")* }

// Command is everything after the function signature until end of line
command = { command_part+ }

command_part = {
    quoted_string
    | variable
    | operator
    | word
}

// Quoted strings can contain variables
quoted_string = ${ "\"" ~ quoted_content ~ "\"" }
quoted_content = @{ (variable_in_quote | escape_sequence | (!("\"" | "\\") ~ ANY))* }
variable_in_quote = @{ "$" ~ (ASCII_DIGIT+ | "@" | identifier) }

// Variables: $1, $@, $var
variable = @{ "$" ~ (ASCII_DIGIT+ | "@" | identifier) }

// Shell operators
operator = { "&&" | "||" | "|" | ";" | ">" | ">>" | "<" }

// Escape sequences
escape_sequence = @{ "\\" ~ ANY }

// Word is any sequence of non-whitespace, non-special characters
word = @{ (!(WHITESPACE | NEWLINE | "\"" | "$" | operator) ~ ANY)+ }

// Argument in function calls
argument = {
    quoted_string
    | variable
    | word
}

// Value for assignments
value = @{ (!NEWLINE ~ ANY)+ }
